CREATE TABLE IF NOT EXISTS books (
  book_id INTEGER UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  author_id INTEGER UNSIGNED,
  title VARCHAR(100) NOT NULL,
  year INTEGER UNSIGNED NOT NULL DEFAULT 1900 ,
  language VARCHAR(2) NOT NULL DEFAULT 'es' COMMENT 'ISO 639-1 Language',
  cover_url VARCHAR(500),
  price DOUBLE(6,2) NOT NULL DEFAULT 10.0,
  sellable TINYINT(1) DEFAULT 1,
  copies INTEGER NOT NULL DEFAULT 1,
  description TEXT
  );

CREATE TABLE IF NOT EXISTS authors (
  author_id INTEGER UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  name   VARCHAR(100) NOT NULL,
  nationality VARCHAR(3)
);


//COMANDO DROP BORRA /// NO TIENE VUELTA DE HOJA

//describe (table_name) /// describe authors; === desc

nos muestra los campos que tiene una tabla

show full columns from books; => nos muestra todo el detalle, podemos leer comentarios

PALABRAS RESERVADAS podemos usarlas entre `` para nombrar columnas  



/* CREAR TABLA CLIENTS*/

CREATE TABLE clients (
  client_id INTEGER UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  email  VARCHAR(100) NOT NULL UNIQUE,
  bithdate DATETIME,
  gender ENUM('M', 'F', 'ND') NOT NULL,
  active TINYINT(1) NOT NULL DEFAULT 1,  
  create_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


/// CREATE operations ///

CREATE TABLE IF NOT EXISTS operations (
  operation_id INTEGER UNSIGNED PRIMARY KEY AUTO_INCREMENT,
  book_id INTEGER UNSIGNED,
  client_id INTEGER UNSIGNED,
  type ENUM('B', 'R', 'S') NOT NULL COMMENT 'B=PRESTADO, R=REGRESADO, S=VENDIDO',
  create_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  finished TINYINT(1) NOT NULL
);


SELECCIONAR O ABRIR UNA BASE DE DATOS

select * from books; 

